
upstream backend_server {
    server host.docker.internal:8080;
}

upstream ai_server {
    server host.docker.internal:8000;
}

server {
    listen 443 ssl;
    server_name ingenius.website *.ingenius.website;

    ssl_certificate /etc/nginx/certificate.crt;
    ssl_certificate_key /etc/nginx/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY13>;
    ssl_prefer_server_ciphers off;
   
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    
    # backend
    location /api {
        set $target http://backend_server;
        proxy_pass $target;
        proxy_redirect off;
        proxy_http_version 1.1;
        # proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme; 
    }

    location ^~/v1/ai/ {
        proxy_redirect off;
        proxy_http_version 1.1;
        # proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        rewrite ^/v1/ai/(.*)$ /$1 break;
        proxy_pass http://ai_server;
    }
} 

